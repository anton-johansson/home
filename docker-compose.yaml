version: '3.4'

networks:
  traefik-net:
    driver: bridge
  elasticsearch-net:
    driver: bridge
  logstash-net:
    driver: bridge
  prometheus-net:
    driver: bridge

volumes:
  elasticsearch-data:
  filebeat-data:
  prometheus-data:
  grafana-data:

services:

  traefik:
    image: traefik:1.7.3-alpine
    container_name: traefik
    networks:
      - traefik-net
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/traefik/acme.json:/acme.json
    restart: always
    ports:
      - target: 80
        published: 80
        mode: host
      - target: 443
        published: 443
        mode: host
    labels:
      traefik.enable: "true"
      traefik.port: 8080
      traefik.frontend.rule: "Host:$DOMAIN_TRAEFIK"
      traefik.frontend.entryPoints: "https"
      traefik.frontend.whiteList.sourceRange: "$NETWORK"
    command:
      - "--entryPoints=Name:http Address::80"
      - "--entryPoints=Name:https Address::443 TLS"
      - "--defaultentrypoints=http,https"
      - "--api"
      - "--api.entryPoint=traefik"
      - "--api.dashboard=true"
      - "--docker"
      - "--docker.watch"
      - "--docker.exposedByDefault=false"
      - "--docker.endpoint=unix:///var/run/docker.sock"
      - "--docker.network=home_traefik-net"
      - "--acme"
      - "--acme.storage=acme.json"
      - "--acme.entryPoint=https"
      - "--acme.httpChallenge.entryPoint=http"
      - "--acme.onHostRule=true"
      - "--acme.onDemand=false"
      - "--acme.email=antoon.johansson@gmail.com"
      - "--traefikLog.format=json"
      - "--logLevel=INFO"

  home-assistant:
    image: homeassistant/home-assistant:0.90.2
    container_name: home-assistant
    networks:
      - traefik-net
      - prometheus-net
    volumes:
      - /home/$USER/home/home-assistant:/config
      - /etc/localtime:/etc/localtime:ro
    restart: always
    devices:
      - /dev/ttyACM0:/dev/zwave
    labels:
      traefik.enable: "true"
      traefik.port: 8123
      traefik.frontend.rule: "Host:$DOMAIN_HOMEASSISTANT"
      traefik.frontend.entryPoints: "https"

  ios-homebridge:
    image: oznu/homebridge:1.7.9-debian
    container_name: ios-homebridge
    restart: always
    depends_on:
      - home-assistant
    extra_hosts:
      - "$DOMAIN_HOMEASSISTANT:$HOST_IP"
    network_mode: host
    environment:
      - TZ=Europe/Stockholm
      - PGID=1000
      - PUID=1000
      - HOMEBRIDGE_CONFIG_UI=1
      - HOMEBRIDGE_CONFIG_UI_PORT=8124
    volumes:
      - /home/$USER/home/ios-homebridge/data:/homebridge

  deconz:
    image: marthoc/deconz:amd64-2.05.47
    container_name: deconz
    networks:
      - traefik-net
    volumes:
      - /home/$USER/home/deconz:/root/.local/share/dresden-elektronik/deCONZ
      - /etc/localtime:/etc/localtime:ro
    restart: always
    devices:
      - /dev/ttyUSB0
    environment:
      - DECONZ_WEB_PORT=8080
    labels:
      traefik.enable: "true"
      traefik.port: 8080
      traefik.frontend.rule: "Host:$DOMAIN_DECONZ"
      traefik.frontend.entryPoints: "http"
      traefik.frontend.whiteList.sourceRange: "$NETWORK"

  portainer:
    image: portainer/portainer:1.19.1
    container_name: portainer
    networks:
      - traefik-net
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/$USER/home/portainer/data:/data
    restart: always
    labels:
      traefik.enable: "true"
      traefik.port: 9000
      traefik.frontend.rule: "Host:$DOMAIN_PORTAINER"
      traefik.frontend.entryPoints: "https"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.5.2
    container_name: elasticsearch
    networks:
      - elasticsearch-net
      - traefik-net
    environment:
      - cluster.name=anton-johansson
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    restart: always
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    labels:
      traefik.enable: "true"
      traefik.port: 9200
      traefik.frontend.rule: "Host:$DOMAIN_ELASTICSEARCH"
      traefik.frontend.entryPoints: "https"
      traefik.frontend.whiteList.sourceRange: "$NETWORK"

  curator:
    image: bobrik/curator:5.6.0
    container_name: curator
    command:
      - --config
      - /etc/curator/config.yaml
      - /etc/curator/action-file.yaml
    networks:
      - elasticsearch-net
    volumes:
      - /home/$USER/home/curator/config.yaml:/etc/curator/config.yaml:ro
      - /home/$USER/home/curator/action-file.yaml:/etc/curator/action-file.yaml:ro
    depends_on:
      - elasticsearch

  logstash:
    image: docker.elastic.co/logstash/logstash-oss:6.5.2
    container_name: logstash
    networks:
      - elasticsearch-net
      - logstash-net
    environment:
      - "LS_JAVA_OPTS=-Xmx256m -Xms256m"
    restart: always
    volumes:
      - /home/$USER/home/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - /home/$USER/home/logstash/config/template.json:/usr/share/logstash/config/template.json:ro
      - /home/$USER/home/logstash/pipeline:/usr/share/logstash/pipeline:ro
    depends_on:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana-oss:6.5.2
    container_name: kibana
    networks:
      - elasticsearch-net
      - traefik-net
    volumes:
      - /home/$USER/home/kibana/config:/usr/share/kibana/config:ro
    restart: always
    depends_on:
      - elasticsearch
    labels:
      traefik.enable: "true"
      traefik.port: 5601
      traefik.frontend.rule: "Host:$DOMAIN_KIBANA"
      traefik.frontend.entryPoints: "https"
      traefik.frontend.whiteList.sourceRange: "$NETWORK"

  filebeat:
    image: docker.elastic.co/beats/filebeat-oss:6.5.2
    container_name: filebeat
    user: root
    command: -e --strict.perms=false
    networks:
      - logstash-net
    restart: always
    volumes:
      - /home/$USER/home/filebeat/filebeat.yaml:/usr/share/filebeat/filebeat.yml:ro
      - filebeat-data:/usr/share/filebeat/data
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    depends_on:
      - logstash

  prometheus:
    image: prom/prometheus:v2.5.0
    container_name: prometheus
    networks:
      - traefik-net
      - prometheus-net
    restart: always
    volumes:
      - /home/$USER/home/prometheus/prometheus.yaml:/etc/prometheus/prometheus.yml:ro
      - /home/$USER/home/home-assistant/bearer-token:/etc/prometheus/home-assistant-bearer-token:ro
      - prometheus-data:/prometheus
    labels:
      traefik.enable: "true"
      traefik.port: 9090
      traefik.frontend.rule: "Host:$DOMAIN_PROMETHEUS"
      traefik.frontend.entryPoints: "https"
      traefik.frontend.whiteList.sourceRange: "$NETWORK"

  grafana:
    image: grafana/grafana:5.3.4
    container_name: grafana
    networks:
      - traefik-net
      - prometheus-net
    restart: always
    volumes:
      - grafana-data:/var/lib/grafana
    labels:
      traefik.enable: "true"
      traefik.port: 3000
      traefik.frontend.rule: "Host:$DOMAIN_GRAFANA"
      traefik.frontend.entryPoints: "https"

  callback-proxy-service:
    image: antonjohansson/callback-proxy-service:v1.2.0
    container_name: callback-proxy-service
    networks:
      - traefik-net
    restart: always
    volumes:
      - /home/$USER/home/callback-proxy-service/config:/etc/callback-proxy-service:ro
      - /home/$USER/home/callback-proxy-service/data:/var/callback-proxy-service
    labels:
      traefik.enable: "true"
      traefik.config.port: 8181
      traefik.config.frontend.rule: "Host:$DOMAIN_CALLBACK_PROXY_CONFIG"
      traefik.config.frontend.entryPoints: "http"
      traefik.config.frontend.whiteList.sourceRange: "$NETWORK"
      traefik.service.port: 8182
      traefik.service.frontend.rule: "Host:$DOMAIN_CALLBACK_PROXY_SERVICE"
      traefik.service.frontend.entryPoints: "https"
